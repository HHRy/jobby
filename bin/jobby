#!/usr/bin/env ruby
require 'logger'
require 'optparse'
require 'etc'
require "#{File.dirname(__FILE__)}/../lib/server"
require "#{File.dirname(__FILE__)}/../lib/client"

def error(message)
  puts "  ERROR - #{message}"
  exit -1
end

def message(message)
  puts "  #{message}"
end

require "#{File.dirname(__FILE__)}/../lib/options" # this gives an options hash to use

begin
  # Change ownership if needed
  if options[:group]
    message "Setting group ownership to #{options[:group]}..." if options[:verbose]
    Process::GID.change_privilege Etc.getgrnam(options[:group]).gid
  end
  if options[:user]
    message "Setting user ownership to #{options[:user]}..." if options[:verbose]
    Process::UID.change_privilege Etc.getpwnam(options[:user]).uid
  end

  if options[:flush] or options[:wipe]
    if options[:wipe]
      message "Stopping Jobby server and terminating forked children..."
    else
      message "Stopping Jobby server..."
    end
  end

  # Try to connect to the server process
  message "Trying to connect to server on #{options[:socket]}..." if options[:verbose]
  Jobby::Client.new(options[:socket]) { |client| client.send(options[:input]) }
  message "Success!" if options[:verbose]
rescue Errno::EPERM
  error "You don't have permission to change the process ownership - perhaps you should be root?"
rescue Errno::EACCES => exception
  error exception.message
rescue Errno::ENOENT, Errno::ECONNREFUSED
  message "There doesn't seem to be a server listening on #{options[:socket]} - starting one..." if options[:verbose]
  # Connect failed, fork and start the server process
  if options[:ruby].nil? and options[:command].nil?
    error "No server found on #{options[:socket]} and you didn't give --ruby or --command to execute"
  end
  exit if options[:flush] or options[:wipe]
  fork do
    begin
      Jobby::Server.new(options[:socket], options[:max_child_processes], options[:log]).run(&options[:block_to_run])
    rescue Exception => exception
      error exception.message
    end
  end
  sleep 2 # give the server time to start
  message "Trying to connect to server on #{options[:socket]}..." if options[:verbose]
  begin
    Jobby::Client.new(options[:socket]) { |client| client.send(options[:input]) }
    message "Success!" if options[:verbose]
  rescue Errno::ECONNREFUSED
    error "Couldn't connect to the server process"
  end
end
